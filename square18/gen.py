data = [5, 9, 4, 15, 5, 11, 16, 14, 11, 13, 13, 8, 12, 7, 16, 2, 6, 4, 11, 4, 2, 13, 7, 10, 4, 12, 14, 16, 7, 6, 3, 14, 1, 9, 1, 12, 14, 10, 11, 5, 1, 9, 8, 13, 6, 2, 16, 6, 6, 2, 3, 6, 11, 14, 5, 5, 3, 15, 1, 5, 7, 13, 8, 5, 12, 16, 1, 2, 8, 4, 12, 5, 11, 13, 13, 8, 9, 3, 9, 10, 12, 16, 11, 6, 6, 13, 2, 14, 13, 14, 3, 4, 1, 6, 12, 14, 5, 9, 1, 4, 8, 4, 7, 6, 12, 5, 5, 3, 3, 13, 11, 12, 5, 1, 4, 2, 3, 15, 11, 16, 1, 2, 2, 4, 12, 5, 10, 6, 14, 2, 5, 15, 13, 13, 10, 15, 7, 8, 14, 6, 10, 11, 5, 10, 1, 12, 10, 10, 7, 7, 16, 8, 9, 8, 11, 12, 10, 16, 15, 9, 16, 16, 12, 2, 7, 1, 15, 6, 4, 3, 8, 11, 13, 7, 3, 5, 16, 4, 11, 9, 12, 2, 13, 1, 12, 5, 11, 11, 9, 15, 4, 16, 8, 11, 7, 7, 7, 8, 12, 2, 7, 4, 6, 4, 15, 5, 1, 4, 7, 4, 4, 3, 10, 7, 12, 15, 7, 12, 1, 14, 4, 4, 11, 1, 15, 14, 9, 14, 16, 2, 4, 12, 2, 15, 15, 3, 4, 9, 8, 15, 16, 3, 14, 13, 4, 3, 2, 1]
good_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 234, 235, 252, 253, 254]

def gen_sol(seq, whitelist):
    sol = []
    k = 0
    prod = 1

    for elem in seq:
        indices = [i for i, x in enumerate(data)
                    if x == (elem + k) and i in whitelist]

        prod *= elem
        sol.append(indices[0])

        k += 1

    print(prod)
    return sol

def sol_to_str(l):
    sol = gen_sol(l, good_values)
    sol = ' '.join([str(x) for x in sol])
    return sol

for x in range(16):
    for y in range(16):
        for z in range(16):
            if x == y or y == z or x == z: continue

            a = [1] * 16
            a[x] = 2
            a[y] = 3
            a[z] = 3

            try:
                print (sol_to_str(a))
            except:
                pass
